spring:
  # 数据库数据源配置
  datasource:
    # 数据库连接 URL
    # - jdbc:mysql://<主机名>:<端口号>/<数据库名>
    # - serverTimezone=UTC 用于指定服务器时区，避免一些时区问题
    # - useUnicode=true&characterEncoding=utf8 用于支持中文和特殊字符
    # - allowPublicKeyRetrieval=true (如果MySQL版本较高且需要，可以加上)
    url: jdbc:mysql://localhost:3306/opencourse?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8
    # 数据库用户名
    username: root
    # 数据库密码
    password: 15102zizi
    # JDBC 驱动程序类 (对于 MySQL 8.x 及更高版本，推荐使用 com.mysql.cj.jdbc.Driver)
    # Spring Boot 通常可以自动检测，但显式声明可以避免一些问题
    driver-class-name: com.mysql.cj.jdbc.Driver
    # HikariCP 连接池配置 (Spring Boot 默认使用 HikariCP)
    hikari:
      # 连接池中允许的最小空闲连接数
      minimum-idle: 5
      # 连接池中允许的最大连接数
      maximum-pool-size: 20
      # 连接自动提交
      auto-commit: true
      # 连接空闲超时时间 (毫秒)，连接在池中保持空闲状态的最长时间
      idle-timeout: 30000
      # 连接池的名称
      pool-name: MyHikariCP
      # 连接在被认为超时之前等待来自池的最大毫秒数
      connection-timeout: 30000
      # 连接在池中可以保留的最长生命周期 (毫秒)
      max-lifetime: 1800000 # 30 分钟

  # JPA (Java Persistence API) 相关配置 (如果使用 Spring Data JPA)
  jpa:
    # 是否在日志中显示执行的 SQL 语句 (方便调试)
    show-sql: true
    # 数据库平台方言 (Hibernate 会根据 driver-class-name 自动选择，但也可以显式指定)
    database-platform: org.hibernate.dialect.MySQLDialect
    # Hibernate DDL (Data Definition Language) 自动操作
    # - none: 不做任何操作 (生产环境推荐)
    # - validate: 验证 schema，如果 schema 不匹配则报错
    # - update: 如果 schema 不匹配，则尝试更新 schema (开发环境常用)
    # - create: 每次启动都删除并重新创建 schema (测试或开发初期常用)
    # - create-drop: 启动时创建 schema，关闭时删除 schema (测试常用)
    hibernate:
      # update 表明每次启动时更新数据库结构
      ddl-auto: update # 根据需求选择，生产环境请谨慎使用 update/create/create-drop
    # JPA 属性配置
    properties:
      hibernate: # 格式化输出的 SQL 语句 (如果 show-sql 为 true)
        format_sql: true

  # 邮件服务配置
  mail:
    host: smtp.163.com # 或其他邮件服务器
    port: 465
    username: your_email@163.com # 发送邮件的邮箱
    password: your_email_password # 邮箱授权码而非登录密码
    properties:
      mail:
        smtp:
          auth: true
          ssl:
            enable: true
            required: true
          starttls:
            enable: true
            required: true

# JWT配置
jwt:
  secret: your_jwt_secret_key_here_make_it_long_and_random_for_security
  expiration: 86400000 # 1天，单位为毫秒

# MinIO
minio:
  endpoint: http://localhost:9000
  accessKey: minioadmin
  secretKey: minioadmin
  bucket:
    name: opencourse-files

# 自定义应用配置
app:
  verification:
    code:
      expiration:
        300 # 验证码有效期，单位为秒
        # 如果使用 MySQL InnoDB 存储引擎，可以指定此方言以获得更好的特性支持
        # dialect: org.hibernate.dialect.MySQLInnoDBDialect # 或者更通用的 MySQL8Dialect 等

  # 如果有针对不同环境的配置 (可选)
  # profiles:
  #   active: dev # 激活 'dev' profile, 会加载 application-dev.yml
# 如果使用 MyBatis (可选)
# mybatis:
#   mapper-locations: classpath:mapper/*.xml # 指定 MyBatis Mapper XML 文件的位置
#   configuration:
#     map-underscore-to-camel-case: true # 开启驼峰命名转换

# 服务器端口配置
# server:
#   port: 8080
